corstars <-function(x, method=c("pearson", "spearman"), removeTriangle=c("upper", "lower"),
result=c("none", "html", "latex")){
#Compute correlation matrix
require(Hmisc)
x <- data.matrix(MLSTUDY3)
correlation_matrix<-rcorr(x, type="pearson")
R <- correlation_matrix$r # Matrix of correlation coeficients
p <- correlation_matrix$P # Matrix of p-value
}
###################
## Define notions for significance levels; spacing is important.
mystars <- ifelse(p < .0001, "****", ifelse(p < .001, "*** ", ifelse(p < .01, "**  ", ifelse(p < .05, "*   ", "    "))))
## trunctuate the correlation matrix to two decimal
R <- format(round(cbind(rep(-1.11, ncol(x)), R), 2))[,-1]
## build a new matrix that includes the correlations with their apropriate stars
Rnew <- matrix(paste(R, mystars, sep=""), ncol=ncol(MLSTUDY3))
diag(Rnew) <- paste(diag(R), " ", sep="")
rownames(Rnew) <- colnames(MLSTUDY3)
colnames(Rnew) <- paste(colnames(MLSTUDY3), "", sep="")
## remove upper triangle of correlation matrix
if(removeTriangle[1]=="upper"){
Rnew <- as.matrix(Rnew)
Rnew[upper.tri(Rnew, diag = TRUE)] <- ""
Rnew <- as.data.frame(Rnew)
if(result[1]=="html") print(xtable(Rnew), type="html")
else print(xtable(Rnew), type="latex")
}
#######
predict <- ggpredict(m1, terms=c("manipgroup", "nation"), ci.lvl = 0.95, type = "re")
predict
m1
summary(m1)
#plotting for m1
(mm_plot <- ggplot(MLSTUDY3, aes(x = manipgroup, y = MJ, colour = id)) +
facet_wrap(~nation, nrow=2) +   # a panel for each nation
geom_boxplot() +
geom_line(data = cbind(MLSTUDY3, pred = predict(m1)), aes(y = pred), size = 1) +  # adding predicted line from mixed model
theme(legend.position = "none",
panel.spacing = unit(2, "lines"))  # adding space between panels
)
#plotting for m1
(mm_plot <- ggplot(MLSTUDY3, aes(x = manipgroup, y = MJ, colour = id)) +
facet_wrap(~nation, nrow=2) +   # a panel for each nation
geom_boxplot() +
geom_dotplot(data = cbind(MLSTUDY3, pred = predict(m1)), aes(y = pred), size = 1) +  # adding predicted line from mixed model
theme(legend.position = "none",
panel.spacing = unit(2, "lines"))  # adding space between panels
)
#plotting for m1
(mm_plot <- ggplot(MLSTUDY3, aes(x = manipgroup, y = MJ, colour = id)) +
facet_wrap(~nation, nrow=2) +   # a panel for each nation
geom_boxplot() +
panel.spacing = unit(2, "lines"))  # adding space between panels
#plotting for m1
(mm_plot <- ggplot(MLSTUDY3, aes(x = manipgroup, y = MJ, colour = id)) +
facet_wrap(~nation, nrow=2) +   # a panel for each nation
geom_boxplot() +
panel.spacing = unit(2, "lines"))  # adding space between panels
#plotting for m1
(mm_plot <- ggplot(MLSTUDY3, aes(x = manipgroup, y = MJ, colour = nation)) +
facet_wrap(~nation, nrow=2) +   # a panel for each nation
geom_boxplot() +
geom_line(data = cbind(MLSTUDY3, pred = predict(m1)), aes(y = pred), size = 1) +  # adding predicted line from mixed model
theme(legend.position = "none",
panel.spacing = unit(2, "lines"))  # adding space between panels
)
#plotting for m1
(mm_plot <- ggplot(MLSTUDY3, aes(x = manipgroup, y = MJ, colour = nation)) +
facet_wrap(~nation, nrow=2) +   # a panel for each nation
geom_boxplot() +
geom_line(data = cbind(MLSTUDY3, pred = predict(m1)), aes(y = pred), size = 1) +  # adding predicted line from mixed model
theme(legend.position = "none",
panel.spacing = unit(2, "lines"))  # adding space between panels
)
#plotting for m1
(mm_plot <- ggplot(MLSTUDY3, aes(x = manipgroup, y = MJ, colour = id)) +
facet_wrap(~nation, nrow=2) +   # a panel for each nation
geom_point(alpha = 0.5) +
theme_classic() +
geom_line(data = cbind(MLSTUDY3, pred = predict(m1)), aes(y = pred), size = 1) +  # adding predicted line from mixed model
theme(legend.position = "none",
panel.spacing = unit(2, "lines"))  # adding space between panels
)
library(readxl)
library(ggplot2)
library(tidyverse)
Malaria <- read_excel("~/Desktop/Belajar R/Malaria/Malaria_Data.xlsx",
col_types = c("text", "text", "text",
"text", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"text"))
attach(Malaria)
### Descriptive Analysis
#Dusun
sample1<-table(Dusun, Sex)
sample1
plotbydusun<-ggplot(Malaria, aes(Dusun, fill=Sex)) + geom_bar(position="Dodge")
plotbydusun
#Temperature
plotbytemp <- ggplot(Malaria, aes(Dusun, `Temp (oC)`, fill=Sex)) + geom_boxplot()
plotbytemp
#HbLevel
plotbyHb <- ggplot(Malaria, aes(Dusun, HB, fill=Sex)) + geom_boxplot()
plotbyHb
#Malaria Status
plotbyMalaria <- plotbydusun<-ggplot(Malaria, aes(Dusun, fill=Type)) + geom_bar(position="Dodge")
plotbyMalaria
#Recode Variabel Malaria type
Malaria$stat <- recode(Type, NEG="NEG", .default = "POS")
View(Malaria)
#Malaria Status
plotbyMalaria <- plotbydusun<-ggplot(Malaria, aes(Dusun, fill=Type)) + geom_bar(position="Dodge")
plotbyMalaria
#Malaria Status
plotbyMalaria <- plotbydusun<-ggplot(Malaria, aes(Dusun, fill=Malaria$stat)) + geom_bar(position="Dodge")
plotbyMalaria
#Temperature by Malaria Status
malpos <- Malaria[which(Malaria$stat=='POS')]
#Temperature by Malaria Status
malpos <- subset(Malaria, stat=="POS")
malbytemp <- ggplot(Malaria, aes(Dusun, HB)) + geom_boxplot()
malbytemp
malbytemp <- ggplot(malpos, aes(Dusun, HB)) + geom_boxplot()
malbytemp
malbytemp <- ggplot(malaria, aes(Dusun, HB, fill=stat)) + geom_boxplot()
malbytemp <- ggplot(Malaria, aes(Dusun, HB, fill=stat)) + geom_boxplot()
malbytemp
malbytemppos <-ggplot(malpos, aes(Dusun, HB, fill=stat)) + geom_boxplot()
malbytemppos
malbytempall
malbytempall <- ggplot(Malaria, aes(Dusun, HB, fill=stat)) + geom_boxplot()
malbytempall
#Anova two way analysis for Hb Level
anovahb <- aov(HB~Dusun + Sex, data = Malaria)
summary(anovahb)
# Boxplot Graph HB by status for each village showing pvalue
p <- ggboxplot(Malaria, x = "stat", y = "HB",
color = "stat", palette = "jco",
add = "jitter",
facet.by = "Dusun", short.panel.labs = FALSE)
library(ggpubr)
# Boxplot Graph HB by status for each village showing pvalue
p <- ggboxplot(Malaria, x = "stat", y = "HB",
color = "stat", palette = "jco",
add = "jitter",
facet.by = "Dusun", short.panel.labs = FALSE)
# Use only p.format as label. Remove method name.
p + stat_compare_means(label = "p.format")
# Boxplot Graph HB by status for each village showing pvalue
p <- ggboxplot(Malaria, x = "stat", y = "HB",
color = "stat", palette = "jco",
facet.by = "Dusun", short.panel.labs = FALSE)
# Use only p.format as label. Remove method name.
p + stat_compare_means(label = "p.format")
library(readxl)
library(ggplot2)
library(tidyverse)
library(ggpubr)
Malaria <- read_excel("~/Desktop/Belajar R/Malaria/Malaria_Data.xlsx",
col_types = c("text", "text", "text",
"text", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"text"))
attach(Malaria)
#Recode Variabel Malaria type
Malaria$stat <- recode(Type, NEG="NEG", .default = "POS")
### Descriptive Analysis
#Dusun
sample1<-table(Dusun, Sex)
sample1
plotbydusun<-ggplot(Malaria, aes(Dusun, fill=Sex)) + geom_bar(position="Dodge")
plotbydusun
#Temperature
plotbytemp <- ggplot(Malaria, aes(Dusun, `Temp (oC)`, fill=Sex)) + geom_boxplot()
plotbytemp
#HbLevel
plotbyHb <- ggplot(Malaria, aes(Dusun, HB, fill=Sex)) + geom_boxplot()
plotbyHb
#Malaria Status
plotbyMalaria <- plotbydusun<-ggplot(Malaria, aes(Dusun, fill=Malaria$stat)) + geom_bar(position="Dodge")
plotbyMalaria
#Temperature by Malaria Status
malpos <- subset(Malaria, stat=="POS")
malbytempall <- ggplot(Malaria, aes(Dusun, HB, fill=stat)) + geom_boxplot()
malbytempall
malbytemppos <-ggplot(malpos, aes(Dusun, HB, fill=stat)) + geom_boxplot()
malbytemppos
#Anova two way analysis for Hb Level
anovahb <- aov(HB~Dusun + Sex, data = Malaria)
summary(anovahb)
# Boxplot Graph HB by status for each village showing pvalue
p <- ggboxplot(Malaria, x = "stat", y = "HB",
color = "stat", palette = "jco",
facet.by = "Dusun", short.panel.labs = FALSE)
p + stat_compare_means(label = "p.format")
#Boxplot Graph Hb comparing Dusun for Malaria Positive only
compare_means(HB~Dusun, data = malpos)
mycomparison <- list(c("I", "II"), c("I", "III"), c("I", "IV"), c("II","III"), c("II", "IV"), c("III", "IV"))
ggboxplot(malpos, x = "Dusun", y = "HB",
color = "Dusun", palette = "jco")+
stat_compare_means(comparisons = mycomparison)+ # Add pairwise comparisons p-value
stat_compare_means(label.y = 50)     # Add global p-value
mycomparison <- list(c("I", "II"), c("I", "III"), c("I", "IV"), c("II","III"), c("II", "IV"), c("III", "IV"))
ggboxplot(malpos, x = "Dusun", y = "HB",
color = "Dusun", palette = "jco")+
stat_compare_means(comparisons = mycomparison, label.y = c(20, 25, 30, 35, 40, 45))+ # Add pairwise comparisons p-value
stat_compare_means(label.y = 50)     # Add global p-value
library(readxl)
library(ggplot2)
library(tidyverse)
library(ggpubr)
Malaria <- read_excel("~/Desktop/Belajar R/Malaria/Malaria_Data.xlsx",
col_types = c("text", "text", "text",
"text", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"text"))
attach(Malaria)
#Recode Variabel Malaria type
Malaria$stat <- recode(Type, NEG="NEG", .default = "POS")
### Descriptive Analysis
#Dusun
sample1<-table(Dusun, Sex)
sample1
plotbydusun<-ggplot(Malaria, aes(Dusun, fill=Sex)) + geom_bar(position="Dodge")
plotbydusun
#Temperature
plotbytemp <- ggplot(Malaria, aes(Dusun, `Temp (oC)`, fill=Sex)) + geom_boxplot()
plotbytemp
#HbLevel
plotbyHb <- ggplot(Malaria, aes(Dusun, HB, fill=Sex)) + geom_boxplot()
plotbyHb
#Malaria Status
plotbyMalaria <- plotbydusun<-ggplot(Malaria, aes(Dusun, fill=Malaria$stat)) + geom_bar(position="Dodge")
plotbyMalaria
#Temperature by Malaria Status
malpos <- subset(Malaria, stat=="POS")
malbytempall <- ggplot(Malaria, aes(Dusun, HB, fill=stat)) + geom_boxplot()
malbytempall
malbytemppos <-ggplot(malpos, aes(Dusun, HB, fill=stat)) + geom_boxplot()
malbytemppos
#Anova two way analysis for Hb Level
anovahb <- aov(HB~Dusun + Sex, data = Malaria)
summary(anovahb)
# Boxplot Graph HB by status for each village showing pvalue
p <- ggboxplot(Malaria, x = "stat", y = "HB",
color = "stat", palette = "jco",
facet.by = "Dusun", short.panel.labs = FALSE)
p + stat_compare_means(label = "p.format")
#Boxplot Graph Hb comparing Dusun for Malaria Positive only
compare_means(HB~Dusun, data = malpos)
mycomparison <- list(c("I", "II"), c("I", "III"), c("I", "IV"), c("II","III"), c("II", "IV"), c("III", "IV"))
ggboxplot(malpos, x = "Dusun", y = "HB",
color = "Dusun", palette = "jco")+
stat_compare_means(comparisons = mycomparison, label.y = c(20, 25, 30, 35, 40, 45))+ # Add pairwise comparisons p-value
stat_compare_means(label.y = 50)     # Add global p-value
setwd(/home/diansidik/Malaria/)
setwd("~/home/diansidik/Malaria/")
setwd("/home/diansidik/Malaria/")
Malaria <- read_excel("~/home/diansidik/Malaria/data/raw/Malaria_Data.xlsx",
col_types = c("text", "text", "text",
"text", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"text"))
Malaria <- read_excel("/home/diansidik/Malaria/data/raw/Malaria_Data.xlsx",
col_types = c("text", "text", "text",
"text", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"text"))
Malaria <- read_excel("~/data/raw/Malaria_Data.xlsx",
col_types = c("text", "text", "text",
"text", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"text"))
Malaria <- read_excel("/data/raw/Malaria_Data.xlsx",
col_types = c("text", "text", "text",
"text", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"text"))
Malaria <- read_excel("/home/diansidik/Malaria/data/raw/Malaria_Data.xlsx",
col_types = c("text", "text", "text",
"text", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"text"))
setwd("/home/diansidik/Malaria/")
#Recode Variabel Malaria type
Malaria$stat <- recode(Type, NEG="NEG", .default = "POS")
### Descriptive Analysis
#Dusun
sample1<-table(Dusun, Sex)
sample1
plotbydusun<-ggplot(Malaria, aes(Dusun, fill=Sex)) + geom_bar(position="Dodge")
plotbydusun
ggsave(plotbydusun.jpg)
png(plotbydusun.png)
png("plotbydusun.png")
ggsave(plotbydusun.png)
ggsave("plotbydusun.png")
png("plotbydusun.png")
ggsave("~/results/figures/plotbydusun.png")
ggsave("/results/figures/plotbydusun.png")
ggsave("Malaria/results/figures/plotbydusun.png")
png("~/results/figures/plotbydusun.png")
ggsave("~/results/figures/plotbydusun.png")
png("Malaria/results/figures/plotbydusun.png")
ggsave("Malaria/results/figures/plotbydusun.png")
png("/results/figures/plotbydusun.png")
ggsave("/results/figures/plotbydusun.png")
pwd
print("/results/figures/plotbydusun.png")
png("/results/figures/plotbydusun.png")
ggsave(filename="~/results/figures/plotbydusun.png")
png("/results/figures/plotbydusun.png")
ggsave(filename="~Malaria/results/figures/plotbydusun.png")
png("/results/figures/plotbydusun.png")
ggsave(filename="~/Malaria/results/figures/plotbydusun.png")
#Temperature
plotbytemp <- ggplot(Malaria, aes(Dusun, `Temp (oC)`, fill=Sex)) + geom_boxplot()
plotbytemp
plotbytemp
#Temperature
plotbytemp <- ggplot(Malaria, aes(Dusun, `Temp (oC)`, fill=Sex)) + geom_boxplot()
plotbytemp
png("/results/figures/plotbytemp.png")
ggsave(filename="~/Malaria/results/figures/plotbytemp.png")
ggplot(Malaria, aes(Dusun, `Temp (oC)`, fill=Sex)) + geom_boxplot()
dev.off()
#Temperature
plotbytemp <- ggplot(Malaria, aes(Dusun, `Temp (oC)`, fill=Sex)) + geom_boxplot()
plotbytemp
png("/results/figures/plotbytemp.png")
ggsave(filename="~/Malaria/results/figures/plotbytemp.png")
#HbLevel
plotbyHb <- ggplot(Malaria, aes(Dusun, HB, fill=Sex)) + geom_boxplot()
plotbyHb
dev.off()
plotbyHb
png("/results/figures/plotbyHb.png")
ggsave(filename="~/Malaria/results/figures/plotbyHb.png")
dev.off()
library(readxl)
library(ggplot2)
library(tidyverse)
library(ggpubr)
setwd("/home/diansidik/Malaria/")
Malaria <- read_excel("/home/diansidik/Malaria/data/raw/Malaria_Data.xlsx",
col_types = c("text", "text", "text",
"text", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"text"))
Malaria <- read_excel("/data/raw/Malaria_Data.xlsx",
col_types = c("text", "text", "text",
"text", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"text"))
Malaria <- read_excel("~/data/raw/Malaria_Data.xlsx",
col_types = c("text", "text", "text",
"text", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"text"))
setwd("~/Malaria")
Malaria <- read_excel("~/data/raw/Malaria_Data.xlsx",
col_types = c("text", "text", "text",
"text", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"text"))
Malaria <- read_excel("Malaria/data/raw/Malaria_Data.xlsx",
col_types = c("text", "text", "text",
"text", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"text"))
Malaria <- read_excel("~/Malaria/data/raw/Malaria_Data.xlsx",
col_types = c("text", "text", "text",
"text", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"text"))
Malaria <- read_excel("~/Malaria/data/raw/Malaria_Data.xlsx",
col_types = c("text", "text", "text",
"text", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"text"))
attach(Malaria)
#Recode Variabel Malaria type
Malaria$stat <- recode(Type, NEG="NEG", .default = "POS")
### Descriptive Analysis
#Dusun
sample1<-table(Dusun, Sex)
sample1
plotbydusun<-ggplot(Malaria, aes(Dusun, fill=Sex)) + geom_bar(position="Dodge")
plotbydusun
png("/results/figures/plotbydusun.png")
ggsave(filename="~/Malaria/results/figures/plotbydusun.png")
dev.off()
#Temperature
plotbytemp <- ggplot(Malaria, aes(Dusun, `Temp (oC)`, fill=Sex)) + geom_boxplot()
plotbytemp
png("/results/figures/plotbytemp.png")
ggsave(filename="~/Malaria/results/figures/plotbytemp.png")
dev.off()
#HbLevel
plotbyHb <- ggplot(Malaria, aes(Dusun, HB, fill=Sex)) + geom_boxplot()
plotbyHb
png("/results/figures/plotbyHb.png")
ggsave(filename="~/Malaria/results/figures/plotbyHb.png")
dev.off()
#Malaria Status
plotbyMalaria <- plotbydusun<-ggplot(Malaria, aes(Dusun, fill=Malaria$stat)) + geom_bar(position="Dodge")
plotbyMalaria
png("/results/figures/plotbyMalaria.png")
ggsave(filename="~/Malaria/results/figures/plotbyMalaria.png")
dev.off()
#Anova two way analysis for Hb Level
anovahb <- aov(HB~Dusun + Sex, data = Malaria)
summary(anovahb)
anovahb
summary(anovahb)
malbytemppos
dev.off()
malbytempall
malbytempall <- ggplot(Malaria, aes(Dusun, HB, fill=stat)) + geom_boxplot()
malbytempall
#Temperature by Malaria Status
malpos <- subset(Malaria, stat=="POS")
malbytemppos <-ggplot(malpos, aes(Dusun, HB, fill=stat)) + geom_boxplot()
malbytemppos
#Anova two way analysis for Hb Level
anovahb <- aov(HB~Dusun + Sex, data = Malaria)
anovahb
summary(anovahb)
# Boxplot Graph HB by status for each village showing pvalue
p <- ggboxplot(Malaria, x = "stat", y = "HB",
color = "stat", palette = "jco",
facet.by = "Dusun", short.panel.labs = FALSE)
p + stat_compare_means(label = "p.format")
table1<-summary(anovahb)
pdf("/results/output/table1.pdf")
pdf("~/results/output/table1.pdf")
pdf("Malaria/results/output/table1.pdf")
pdf("~/Malaria/results/output/table1.pdf")
print(table1.pdf)
print("~/Malaria/results/output/table1.pdf")
pdf("~/Malaria/results/output/table1.pdf")
pdf(filename="~/Malaria/results/output/table1.pdf")
pdf(file="~/Malaria/results/output/table1.pdf")
pdf(table1, file="~/Malaria/results/output/table1.pdf")
print(table1, file="~/Malaria/results/output/table1.pdf")
print(table1, file="~/Malaria/results/output/table1.txt")
table1<-summary(anovahb)
print(table1, file="~/Malaria/results/output/table1.txt")
dev.off()
print(table1, file="~/Malaria/results/output/table1.txt")
# Boxplot Graph HB by status for each village showing pvalue
p <- ggboxplot(Malaria, x = "stat", y = "HB",
color = "stat", palette = "jco",
facet.by = "Dusun", short.panel.labs = FALSE)
plothbbymal<-p + stat_compare_means(label = "p.format")
plothbbymal
png("/results/figures/plothbbymal.png")
ggsave(filename="~/Malaria/results/figures/plothbbymal.png")
dev.off()
ggboxplot(malpos, x = "Dusun", y = "HB",
color = "Dusun", palette = "jco")+
stat_compare_means(comparisons = mycomparison, label.y = c(20, 25, 30, 35, 40, 45))+ # Add pairwise comparisons p-value
stat_compare_means(label.y = 50)     # Add global p-value
#Boxplot Graph Hb comparing Dusun for Malaria Positive only
compare_means(HB~Dusun, data = malpos)
mycomparison <- list(c("I", "II"), c("I", "III"), c("I", "IV"), c("II","III"), c("II", "IV"), c("III", "IV"))
ggboxplot(malpos, x = "Dusun", y = "HB",
color = "Dusun", palette = "jco")+
stat_compare_means(comparisons = mycomparison, label.y = c(20, 25, 30, 35, 40, 45))+ # Add pairwise comparisons p-value
stat_compare_means(label.y = 50)     # Add global p-value
png("/results/figures/compareHbmeans.png")
ggsave(filename="~/Malaria/results/figures/compareHbmeans.png")
dev.off()
pdf(table1, file="~/Malaria/results/output/table1.txt")
dev.off()
dev.off()
table1<-summary(anovahb)
pdf(table1, file="~/Malaria/results/output/table1.pdf")
dev.off()
table1<-summary(anovahb)
print(table1, file="~/Malaria/results/output/table1.txt")
dev.off()
print(table1, file="~/Malaria/results/output/table1.txt")
#Boxplot Graph Hb comparing Dusun for Malaria Positive only
compare_means(HB~Dusun, data = malpos)
mycomparison <- list(c("I", "II"), c("I", "III"), c("I", "IV"), c("II","III"), c("II", "IV"), c("III", "IV"))
ggboxplot(malpos, x = "Dusun", y = "HB",
color = "Dusun", palette = "jco")+
stat_compare_means(comparisons = mycomparison, label.y = c(20, 25, 30, 35, 40, 45))+ # Add pairwise comparisons p-value
stat_compare_means(label.y = 50)     # Add global p-value
png("/results/figures/compareHbmeans.png")
ggsave(filename="~/Malaria/results/figures/compareHbmeans.png")
dev.off()
#Boxplot Graph Hb comparing Dusun for Malaria Positive only
compare_means(HB~Dusun, data = malpos)
mycomparison <- list(c("I", "II"), c("I", "III"), c("I", "IV"), c("II","III"), c("II", "IV"), c("III", "IV"))
ggboxplot(malpos, x = "Dusun", y = "HB",
color = "Dusun", palette = "jco")+
stat_compare_means(comparisons = mycomparison, label.y = c(20, 25, 30, 35, 40, 45))+ # Add pairwise comparisons p-value
stat_compare_means(label.y = 50)     # Add global p-value
png("/results/figures/compareHbmeans.png")
ggsave(filename="~/Malaria/results/figures/compareHbmeans.png")
dev.off()
ggboxplot(malpos, x = "Dusun", y = "HB",
color = "Dusun", palette = "jco")+
stat_compare_means(comparisons = mycomparison, label.y = c(20, 25, 30, 35, 40, 45))+ # Add pairwise comparisons p-value
stat_compare_means(label.y = 50)     # Add global p-value
plot2 <- ggboxplot(malpos, x = "Dusun", y = "HB",
color = "Dusun", palette = "jco")+
stat_compare_means(comparisons = mycomparison, label.y = c(20, 25, 30, 35, 40, 45))+ # Add pairwise comparisons p-value
stat_compare_means(label.y = 50)     # Add global p-value
plot2
